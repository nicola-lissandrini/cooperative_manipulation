<?xml version="1.0"?>

<launch>
	<arg name="mav_name" value="neo11" />
	<arg name="namespace" value="$(arg mav_name)" />
	<arg name="world_name" default="basic" />
	<arg name="enable_logging" default="false" />
	<arg name="log_file" default="$(arg mav_name)" />
	<arg name="debug" default="false"/>
	<arg name="gui" default="true"/>
	<arg name="paused" default="true"/>
	<arg name="verbose" default="false"/>
	<arg name="x" default="0.0"/>
	<arg name="y" default="0.0"/>
	<arg name="z" default="0.5"/>
	<arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>

	<!-- Init gazebo -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
		<arg name="debug" value="$(arg debug)" />
		<arg name="paused" value="$(arg paused)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="verbose" value="$(arg verbose)"/>
	</include>

	<group ns="$(arg mav_name)">
		<arg name="model" value="$(find aerial_robot)/robots/neo11_odometry.gazebo" />

		<param name="robot_description" command="$(find xacro)/xacro.py '$(arg model)'
			enable_logging:=$(arg enable_logging)
			enable_ground_truth:=true
			enable_mavlink_interface:=false
			log_file:=$(arg log_file)
			wait_to_record_bag:=false
			mav_name:=$(arg mav_name)
			namespace:=$(arg mav_name)" />
		<param name="tf_prefix" type="string" value="$(arg tf_prefix)" />

		<node name="spawn_$(arg mav_name)" pkg="gazebo_ros" type="spawn_model"
			args="-param robot_description
					-urdf
					-x $(arg x)
					-y $(arg y)
					-z $(arg z)
					-model $(arg mav_name)"
			respawn="false" output="screen" />

		<node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
			<rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
			<rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
			<remap from="odometry" to="odometry_sensor1/odometry" />
		</node>

		<node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
		<node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="1 0 0 0 0 0 1 world neo11/base_link 100" />
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
		<include file="$(find aerial_robot)/launch/aerial_widowx_controller.launch">
			<arg name="name" value="$(arg name)" />
		</include>

		<node pkg="controller_manager" type="spawner" name="joint_state_controller_spawner" args="joint_state_controller" respawn="false" output="screen" />
	</group>
</launch>
